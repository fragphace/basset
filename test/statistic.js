// Generated by CoffeeScript 1.6.3
(function() {
  var HarResult, Statistic, assert;

  assert = require('chai').assert;

  Statistic = require('../lib/statistic');

  HarResult = require('../lib/harResult');

  suite('Statistic test case', function() {
    setup(function() {
      var result1, result2;
      this.statistic = new Statistic();
      result1 = new HarResult({
        onLoad: 2
      });
      result2 = new HarResult({
        onLoad: 3
      });
      this.statistic.addResult(result1);
      return this.statistic.addResult(result2);
    });
    test('add result', function() {
      return assert.equal(this.statistic.results.length, 2);
    });
    test('constructor properties', function() {
      var stat;
      stat = new Statistic([
        {
          onLoad: 2
        }, {
          onLoad: 3
        }
      ]);
      return assert.equal(stat.results.length, 2);
    });
    suite('average', function() {
      setup(function() {
        return this.average = this.statistic.average();
      });
      test('type', function() {
        return assert.equal(this.average.constructor.name, 'HarResult');
      });
      test('result', function() {
        return assert.equal(this.average.getValue('onLoad'), 2.5);
      });
      return test('empty results', function() {
        var statistic;
        statistic = new Statistic();
        return assert.equal(statistic.average().getValue('onLoad'), 0);
      });
    });
    return suite('deviation', function() {
      setup(function() {
        return this.deviation = this.statistic.deviation();
      });
      test('type', function() {
        return assert.equal(this.deviation.constructor.name, 'HarResult');
      });
      return test('result', function() {
        return assert.equal(this.deviation.getValue('onLoad'), 0.5);
      });
    });
  });

}).call(this);
