// Generated by CoffeeScript 1.6.3
(function() {
  var Basset, Reporter, assert, sinon;

  assert = require('chai').assert;

  sinon = require('sinon');

  Reporter = require('../lib/reporter/reporter');

  Basset = require('../lib/basset');

  suite('Reporter test case', function() {
    setup(function() {
      this.basset = new Basset('http://example.com');
      return this.reporter = new Reporter();
    });
    return suite('bind', function() {
      setup(function() {
        var _this = this;
        return this.testBond = function(event, methodName) {
          sinon.stub(_this.reporter, methodName);
          _this.reporter.bind(_this.basset);
          _this.basset.emit(event);
          return assert(_this.reporter[methodName].called);
        };
      });
      test('arg must be a Basset instance', function() {
        var _this = this;
        return assert.throws(function() {
          return _this.reporter.bind({});
        });
      });
      test('call start', function() {
        return this.testBond('testStart', 'onTestStart');
      });
      test('call stop', function() {
        return this.testBond('testStop', 'onTestStop');
      });
      test('call begin', function() {
        return this.testBond('begin', 'onBegin');
      });
      test('call end', function() {
        return this.testBond('end', 'onEnd');
      });
      test('call result', function() {
        return this.testBond('result', 'onResult');
      });
      return test('call failure', function() {
        return this.testBond('failure', 'onFailure');
      });
    });
  });

}).call(this);
