// Generated by CoffeeScript 1.6.3
(function() {
  var HarResult, assert;

  assert = require('chai').assert;

  HarResult = require('../lib/harResult');

  suite('Result test case', function() {
    setup(function() {
      this.result = new HarResult();
      return this.har = require('./fixture/bbc.har.json');
    });
    suite('is valid har', function() {
      test('valid', function() {
        return assert.ok(HarResult.isValidHar(this.har));
      });
      return test('invalid har', function() {
        return assert.notOk(HarResult.isValidHar({}));
      });
    });
    suite('collect values from har', function() {
      setup(function() {
        return this.values = HarResult.collectValuesFromHar(this.har);
      });
      test('onLoad', function() {
        return assert.equal(this.values.onLoad, 3124);
      });
      test('requestsNum', function() {
        return assert.equal(this.values.requestsNum, 81);
      });
      test('htmlRequestsNum', function() {
        return assert.equal(this.values.htmlRequestsNum, 3);
      });
      test('cssRequestsNum', function() {
        return assert.equal(this.values.cssRequestsNum, 4);
      });
      test('jsRequestsNum', function() {
        return assert.equal(this.values.jsRequestsNum, 35);
      });
      test('imgRequestsNum', function() {
        return assert.equal(this.values.imgRequestsNum, 39);
      });
      return test('otherRequestsNum', function() {
        return assert.equal(this.values.otherRequestsNum, 0);
      });
    });
    return suite('feed with har', function() {
      test('valid har', function() {
        this.result.feedWithHar(this.har);
        return assert.equal(this.result.getValue('onLoad'), 3124);
      });
      return test('invalid har', function() {
        var _this = this;
        return assert.throws(function() {
          return _this.result.feedWithHar({});
        });
      });
    });
  });

}).call(this);
